/**
 * Mixins
 */


// Creates a wrapper for a series of columns
// @include make-row();

@mixin make-row($gutter: $grid-gutter-width) {
  margin-left:  ($gutter / -2);
  margin-right: ($gutter / -2);
  @include clearfix();
}

//  Breakpoints and media queries:
//
//  Usage:
//------------------------------------
//
//  @include breakpoint($breakpoint, $query1) {
//   /* Styles */
//  }
//
//  $breakpoint: select the device type: bp-small, bp-medium, bp-large, bp-huge. Sizes are defined in _variables.scss
//  $query1: select max-width, min-width, max-height, min-height
//
//
//  Example;
// ------------------------------------
//
//  .hello {
//    color: red;
//      @include breakpoint(bp-huge, max-width) {
//      color:blue;
//    }
//  }
//
//
//  Returns:
// ------------------------------------
//
//  .hello { color: red; }
//  @media (max-width: 1200px) { .hello { color:blue; } }
//
//  Enjoy!


@mixin breakpoint($breakpoint, $query: 'min-width') {
  $breakpoints: (
    'bp-small': $screen-xs-min,
    'bp-medium': $screen-sm-min,
    'bp-large': $screen-md-min,
    'bp-huge': $screen-lg-min,
  );

  @if map-has-key($breakpoints, $breakpoint) {
    @media (#{$query}: map-get($breakpoints, $breakpoint)) { @content; }
  } @else {
    @warn 'No breakpoint found for `#{$breakpoint}`. Allowed values are: #{map-keys($breakpoints)}.';
  }
}

// Clearfix
//
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
//    contenteditable attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that are clearfixed.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.
//
// Source: http://nicolasgallagher.com/micro-clearfix-hack/

@mixin clearfix {
  &::before,
  &::after {
    content: ''; // 1
    display: table; // 2
  }

  &::after {
    clear: both;
  }
}

@mixin ellipsis {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}


// Specific for Appszoom. Deprecated. Must be removed.
@mixin scroll-list() {
  white-space: nowrap;
  overflow: hidden;
}

// Specific for Appszoom. Deprecated. Must be removed.
@mixin no-scroll {
  margin-right: 0;
  overflow: visible;
  overflow-x: auto;
  white-space: normal;
}

//  Add bottom white gradient
//
//   `@include bottom-gradient($height);`
//
//
@mixin bottom-gradient($height: 30px) {
  position: relative;

  &::before {
    background-image: -webkit-gradient (linear, right bottom, right top, from(rgba(255,255,255,1)), to(rgba(255,255,255,.2)));
    bottom: 0;
    content: '';
    height: $height;
    left: 0;
    position: absolute;
    right: 0;
    z-index: 1;
  }
}


//  Ribbon color mixin (used in Appszoom app widget)
//
//   `@include ribbon-color($rating1);`
//
//  Specific for Appszoom. Deprecated. Must be removed.
//
@mixin ribbon-color($color) {
  background-color: $color;
  color: $white;

  ::after,
  ::before {
    border-left-color: $color;
  }
}


//  Circle color mixin (used in $CIRCLE RATING)
//
//   `@include circle-color($rating1);`
//
//
@mixin circle-color($color) {
  color: $color;

  .circle-fill {
    background-color: $color;
  }
}

